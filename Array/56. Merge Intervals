56. Merge Intervals

Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].

/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> list = new ArrayList<Interval>();
        if(intervals == null || intervals.size() == 0) {
        	return list;
        }
        Collections.sort(intervals, new Comparator<Interval>() {
        	public int compare(Interval i1, Interval i2) {
        		return i1.start - i2.start;
        	}
        });
        Interval current = intervals.get(0);
        for(int i = 1; i < intervals.size(); i++) {
            Interval next = intervals.get(i);
        	if(next.start <= current.end) {
        		current.end = Math.max(next.end, current.end);
        	} else {
        		list.add(current);
        		current = next;
        	}
        }
        list.add(current);
        return list;
    }
}