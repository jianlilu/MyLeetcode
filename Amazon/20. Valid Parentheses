Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.


import java.util.Stack;
public class Solution {
    public boolean isValid(String s) {
        if(s == null || s.length() <= 1) return false;
        Stack<Character> stack = new Stack<Character>();
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if(c == '{' || c == '[' || c == '(') {
                stack.push(c);
            } else if(c == '}' || c == ']' || c == ')') {
                if(stack.isEmpty()) {
                    return false;
                } else {
                    char left = stack.pop();
                    if(!isMatch(left, c)) {
                        return false;
                    }
                }
            } else {
                return false;
            }
        }
        return stack.isEmpty();
    }
    private boolean isMatch(char left, char right) {
        if(left == '{') return right == '}';
        if(left == '[') return right == ']';
        if(left == '(') return right == ')';
        return false;
    }
}