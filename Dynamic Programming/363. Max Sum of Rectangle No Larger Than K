363. Max Sum of Rectangle No Larger Than K

Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.

Example:
Given matrix = [
  [1,  0, 1],
  [0, -2, 3]
]
k = 2
The answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).

Note:
The rectangle inside the matrix must have an area > 0.
What if the number of rows is much larger than the number of columns?

public class Solution {
    public int maxSumSubmatrix(int[][] matrix, int k) {
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return Integer.MIN_VALUE;
        }
        int m = matrix.length;
        int n = matrix[0].length;
        int result = Integer.MIN_VALUE;
        for(int i = 0; i < n; i++) {
            int[] array = new int[m];
            for(int j = i; j < n; j++) {
                for(int l = 0; l < m; l++) {
                    array[l] = array[l] + matrix[l][j];
                }
                result = Math.max(result, getClosestSumToK(array, k));
            }
        }
        return result;
    }
    private int getClosestSumToK(int[] arr, int k) {
        int sum=0;
        TreeSet<Integer> set = new TreeSet<Integer>();
        int result=Integer.MIN_VALUE;
        set.add(0);
 
        for(int i=0; i<arr.length; i++){
            sum=sum+arr[i];
 
            Integer ceiling = set.ceiling(sum-k);
            if(ceiling!=null){
                result = Math.max(result, sum-ceiling);        
            }
 
            set.add(sum);
        }
        return result;
    }
}