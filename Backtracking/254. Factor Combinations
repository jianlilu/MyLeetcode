254. Factor Combinations

Numbers can be regarded as product of its factors. For example,

8 = 2 x 2 x 2;
  = 2 x 4.
Write a function that takes an integer n and return all possible combinations of its factors.

Note: 
You may assume that n is always positive.
Factors should be greater than 1 and less than n.
Examples: 
input: 1
output: 
[]
input: 37
output: 
[]
input: 12
output:
[
  [2, 6],
  [2, 2, 3],
  [3, 4]
]
input: 32
output:
[
  [2, 16],
  [2, 2, 8],
  [2, 2, 2, 4],
  [2, 2, 2, 2, 2],
  [2, 4, 4],
  [4, 8]
]

public class Solution {
    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if(n <= 2) {
        	return result;
        }
        List<Integer> list = new ArrayList<Integer>();
        dfs(n, 2, result, list);
        return result;
    }

    private void dfs(int n, int start, List<List<Integer>> result, List<Integer> list) {
        if(n == 1) {
            if(list.size() > 1) {
                result.add(new ArrayList<Integer>(list));
            }
            return;
        }
        for(int i = start; i <= n; i++) {
        	if(n % i != 0) {
        		continue;
        	}
        	list.add(i);
        	dfs(n / i, i, result, list);
        	list.remove(list.size() - 1);
        }
    }
}