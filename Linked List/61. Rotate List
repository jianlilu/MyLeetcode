61. Rotate List

Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k == 0) {
            return head;
        }
        int length = 1;
        ListNode end = head;
        while(end.next != null) {
            end = end.next;
            length++;
        }
        k = k % length;
        if(k == 0) {
            return head;
        }
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        for(int i = 1; i < length - k; i++) {
            head = head.next;
        }
        ListNode next = head.next;
        end.next = dummy.next;
        head.next = null;
        return next;
    }
}