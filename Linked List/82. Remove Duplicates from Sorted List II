82. Remove Duplicates from Sorted List II

Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null) {
            return head;
        }
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        dummy.next = head;
        while(head.next != null) {
            if(head.val == head.next.val) {
                ListNode next = head.next;
                while(next != null && next.val == head.val) {
                    next = next.next;
                }
                prev.next = next;
                if(next == null) {
                    return dummy.next;
                }
                head = next;
            } else {
                head = head.next;
                prev = prev.next;
            }
        }
        return dummy.next;
    }
}