253. Meeting Rooms II

Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

For example,
Given [[0, 30],[5, 10],[15, 20]],
return 2.

/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        if(intervals == null || intervals.length == 0) {
            return 0;
        }
        Arrays.sort(intervals, new Comparator<Interval>() {
        	public int compare(Interval i1, Interval i2) {
        		return i1.start - i2.start;
        	}
        });
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        for(int i = 0; i < intervals.length; i++) {
        	Interval current = intervals[i];
        	if(!pq.isEmpty() && pq.peek() <= current.start) {
        		pq.poll();
        	}
        	pq.add(current.end);
        }
        return pq.size();
    }
}



// [1 2] [3 4]
// [1 3] [2 4]