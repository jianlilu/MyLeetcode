Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.


这道题如何想到用Stack做

[0,1,0,2,1,0,1,3,2,1,2,1]
[0,0,1,1,2,2,2,2,3,3,3,3]
[3,3,3,3,3,3,3,2,2,2,1,0]


public class Solution {
    public int trap(int[] height) {
        if(height == null || height.length <= 2) return 0;
        int[] left = new int[height.length];
        int[] right = new int[height.length];
        int result = 0;
        left[0] = height[0];
        right[right.length - 1] = height[height.length - 1];
        for(int i = 1; i < height.length; i++) {
            left[i] = Math.max(height[i], left[i - 1]);
        }
        for(int i = height.length - 2; i >= 1; i--) {
            right[i] = Math.max(right[i + 1], height[i]);
            result += Math.min(left[i], right[i]) - height[i];
        }
        return result;
    }
}