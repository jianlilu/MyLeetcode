186. Reverse Words in a String II

Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?

public class Solution {
    public void reverseWords(char[] s) {
        if(s == null || s.length == 0) {
            return;
        }
        // reverse the whole sentence
        reverse(s, 0, s.length - 1);
        // reverse each word
        int start = 0;
        int end = 0;
        while(end < s.length) {
            while(end != s.length - 1 && s[end + 1] != ' ') {
                end++;
            }
            reverse(s, start, end);
            start = end + 2;
            end = start;
        }
    }
    private void reverse(char[] s, int start, int end) {
        while(start < end) {
            char temp = s[start];
            s[start] = s[end];
            s[end] = temp;
            start++;
            end--;
        }
    }
}