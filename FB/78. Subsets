78. Subsets

Given a set of distinct integers, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        if(nums == null || nums.length == 0) {
            return list;
        }
        List<Integer> subList = new ArrayList<Integer>();
        helper(nums, list, subList, 0);
        return list;
    }
    private void helper(int[] nums, List<List<Integer>> list, List<Integer> subList, int start) {
        list.add(new ArrayList<Integer>(subList));
        for(int i = start; i < nums.length; i++) {
            subList.add(nums[i]);
            helper(nums, list, subList, i + 1);
            subList.remove(subList.size() - 1);
        }
    }
}