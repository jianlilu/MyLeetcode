159. Longest Substring with At Most Two Distinct Characters

Given a string, find the length of the longest substring T that contains at most 2 distinct characters.

For example, Given s = “eceba”,

T is "ece" which its length is 3.

public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if(s == null || s.length() == 0) {
            return 0;
        }
        if(s.length() <= 2) {
            return s.length();
        }
        int[] array = new int[256];
        int size = 0;
        int max = 0;
        int start = 0;
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if(array[c - '0'] > 0) {
                max = Math.max(max, i - start + 1);
                array[c - '0']++;
            } else {
                if(size < 2) {
                    max = Math.max(max, i - start + 1);
                    array[c - '0']++;
                    size++;
                } else {
                    while(array[s.charAt(start) - '0'] > 1) {
                        array[s.charAt(start) - '0']--;
                        start++;
                    }
                    array[s.charAt(start) - '0']--;
                    start++;
                    array[c - '0']++;
                }
            }
        }
        return max;
    }
}