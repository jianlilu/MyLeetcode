250. Count Univalue Subtrees

Given a binary tree, count the number of uni-value subtrees.

A Uni-value subtree means all nodes of the subtree have the same value.

For example:
Given binary tree,
              5
             / \
            1   5
           / \   \
          5   5   5
return 4.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int countUnivalSubtrees(TreeNode root) {
    	int[] count = new int[1];
    	isUnivalSubtree(root, count);
        return count[0];
    }
    
    public boolean isUnivalSubtree(TreeNode root, int[] count) {
    	if(root == null) {
    		return true;
    	}
    	boolean left = isUnivalSubtree(root.left, count);
    	boolean right = isUnivalSubtree(root.right, count);
    	if(root.left != null) {
    		left = left && root.left.val == root.val;
    	}
    	if(root.right != null) {
    		right = right && root.right.val == root.val;
    	}
    	if(left && right) {
			count[0]++;
			return true;
    	}
    	return false;
    }
}