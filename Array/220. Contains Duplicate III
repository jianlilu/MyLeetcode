220. Contains Duplicate III

Given an array of integers, find out whether there are two distinct indices i and j in the array such that the difference between nums[i] and nums[j] is at most t and the difference between i and j is at most k.

public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        TreeSet<Integer> set = new TreeSet<Integer>();
        for(int i = 0; i < nums.length; i++) {
            int num = nums[i];
            if(set.ceiling(num) != null && set.ceiling(num) - num <= t) {
                return true;
            }
            if(set.floor(num) != null && num <= t + set.floor(num)) {
                return true;
            }
            set.add(num);
            if(set.size() > k) {
                set.remove(nums[i - k]);
            }
        }
        return false;
    }
}