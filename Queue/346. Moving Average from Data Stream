346. Moving Average from Data Stream

Given a stream of integers and a window size, calculate the moving average of all integers in the sliding window.

For example,
MovingAverage m = new MovingAverage(3);
m.next(1) = 1
m.next(10) = (1 + 10) / 2
m.next(3) = (1 + 10 + 3) / 3
m.next(5) = (10 + 3 + 5) / 3


public class MovingAverage {

    /** Initialize your data structure here. */
    private Queue<Integer> queue;
    private int maxSize;
    private int sum;
    public MovingAverage(int size) {
        maxSize = size;
        queue = new LinkedList<Integer>();
    }
    
    public double next(int val) {
        int currentSize = queue.size();
        double result = 0;
        if(currentSize < maxSize) {
            currentSize++;
            queue.offer(val);
            sum += val;
            result = sum * 1.0 / currentSize;
        } else {
            sum = sum - queue.poll();
            queue.offer(val);
            sum = sum + val;
            result = sum * 1.0 / maxSize;
        }
        return result;
    }
}

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
 */