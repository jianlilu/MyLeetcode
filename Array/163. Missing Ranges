163. Missing Ranges

Given a sorted integer array where the range of elements are in the inclusive range [lower, upper], return its missing ranges.

For example, given [0, 1, 3, 50, 75], lower = 0 and upper = 99, return ["2", "4->49", "51->74", "76->99"].

public class Solution {
    public List<String> findMissingRanges(int[] nums, int lower, int upper) {
        List<String> list = new ArrayList<String>();
        if(nums == null || nums.length == 0) {
            addStringToList(list, lower, upper);
            return list;
        }
        if(nums[0] != lower) {
            addStringToList(list, lower, nums[0] - 1);
        }
        for(int i = 0; i < nums.length - 1; i++) {
            if(nums[i] + 1 < nums[i + 1]) {
                addStringToList(list, nums[i] + 1, nums[i + 1] - 1);
            }
        }
        if(nums[nums.length - 1] != upper) {
            addStringToList(list, nums[nums.length - 1] + 1, upper);
        }
        return list;
    }
    private void addStringToList(List<String> list, int left, int right) {
        if(left == right) {
            list.add(left + "");
        } else {
            list.add(left + "->" + right);
        }
    }
}