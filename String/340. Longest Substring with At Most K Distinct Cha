340. Longest Substring with At Most K Distinct Characters

Given a string, find the length of the longest substring T that contains at most k distinct characters.

For example, Given s = “eceba” and k = 2,

T is "ece" which its length is 3.

public class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if(s == null || s.length() == 0 || k <= 0) {
            return 0;
        }
        if(s.length() <= k) {
            return s.length();
        }
        int[] array = new int[256];
        int max = 0;
        int size = 0;
        int start = 0;
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            // if the character is already in the current string
            if(array[c] > 0) {
                max = Math.max(max, i - start + 1);
                array[c]++;
            } else {
                if(size < k) {
                    max = Math.max(max, i - start + 1);
                    array[c]++;
                    size++;
                } else {
                    // looking for the first character which only comes up once
                    while(array[s.charAt(start)] > 1) {
                        array[s.charAt(start)]--;
                        start++;
                    }
                    array[s.charAt(start)]--;
                    start++;
                    array[c]++;
                }
            }
        }
        return max;
    }
}